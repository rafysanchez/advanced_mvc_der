@using Sids.Prodesp.Model.Entity.Empenho
@using Sids.Prodesp.UI.Areas.Empenho.Models

@model Empenho

@{
    var tipo = Request.QueryString["tipo"];

    ViewBag.Title = (Model.Id > 0 ? (tipo == "a" || tipo == "i" ? "Alterar" : "Visualizar") : "Cadastrar") + " Empenho";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string msgRetorno = ViewBag.MsgRetorno;
    var controller = ViewContext.RouteData.GetRequiredString("controller");

    bool transmitirProdesp = Convert.ToBoolean(Model.TransmitirProdesp);
    bool transmitirSiafem = Convert.ToBoolean(Model.TransmitirSiafem);
    bool transmitirSiafisico = Convert.ToBoolean(Model.TransmitirSiafisico);

    bool prodespChecked = transmitirProdesp || Convert.ToInt32(Model.Id) > 0;
    bool siafemChecked = transmitirSiafem && !transmitirSiafisico;
    bool siafisicoChecked = !transmitirSiafem && transmitirSiafisico;
}

<script>
    var controller = @Html.Raw(Json.Encode(controller));
    var usuario = @Html.Raw(Json.Encode(ViewBag.Usuario));
    var estruturaInfo = @Html.Raw(Json.Encode(ViewBag.Estrutura));
    var programasInfo = @Html.Raw(Json.Encode(ViewBag.Programas));
    var fonteInfo = @Html.Raw(Json.Encode(ViewBag.Fontes));
    var selecionado = @Html.Raw(Json.Encode(ViewBag.Programa));
    var ModelItem = @Html.Raw(Json.Encode(Model));
    var ModelItemList = @Html.Raw(Json.Encode(ViewBag.DadoEmpenhoItemGrid));
    var ModelItemEmpenho = @Html.Raw(Json.Encode(ViewBag.DadoEmpenhoItem));
    var regional = @Html.Raw(Json.Encode(ViewBag.Regional));
    var urlVoltar = '@Url.Action("AtualizarIndex", new { Area = "Empenho" })';

</script>

<link href="~/Content/jquery-ui-autocomplete/jquery-ui.css" rel="stylesheet" />
<div class="col-md-12">
    <h2 id="titulo">@ViewBag.Title</h2>

    <div id="divPainelCadastrar" class="panel panel-default">
        <div class="panel-body">
            @using (Html.BeginForm("DownloadFile", "Empenho", FormMethod.Post, new { name = "frmPainelCadastrar", id = "frmPainelCadastrar" }))
            {
                @Html.AntiForgeryToken()

                @Html.Hidden("Id", Model.Id, new { @id = "Id" })

                <div class="row margT10">
                    <div class="col-sm-12 col-lg-12 col-md-12 form-group-sm form-group has-feedback">
                        <div class="input-group-sm">
                            <span>Informe o sistema:</span>

                            @Html.LabelFor(x => x.TransmitirProdesp, new { @class = "label-inline margL10" })
                            @Html.CheckBoxFor(x => transmitirProdesp, new { @id = "transmitirProdesp", @name = "transmitir", @class = "lockProdesp" })

                            @Html.LabelFor(x => x.TransmitirSiafem, new { @class = "label-inline margL10" })
                            @Html.CheckBoxFor(x => transmitirSiafem, new { @id = "transmitirSIAFEM", @value = "1", @name = "transmitir", @class = "lockSiafem lockSiafisico" })

                            @Html.LabelFor(x => x.TransmitirSiafisico, new { @class = "label-inline margL10" })
                            @Html.CheckBoxFor(x => transmitirSiafisico, new { @id = "transmitirSIAFISICO", @value = "2", @name = "transmitir", @class = "lockSiafem lockSiafisico" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-lg-2 col-md-2 form-group-sm prodesp">
                        @Html.LabelFor(model => model.NumeroEmpenhoProdesp, new { @class = "control-label label-form-DER prodesp" })<span class="text-danger"></span>
                        @Html.TextBoxFor(model => model.NumeroEmpenhoProdesp, new { @class = "form-control lockProdesp", @ReadOnly = "True" })
                    </div>

                    <div class="col-sm-12 col-lg-2 col-md-2 form-group-sm siafem">
                        @Html.LabelFor(model => model.NumeroEmpenhoSiafem, new { @class = "control-label label-form-DER siafem" })<span class="text-danger"></span>
                        @Html.TextBoxFor(model => model.NumeroEmpenhoSiafem, new { @class = "form-control lockSiafem", @ReadOnly = "True" })
                    </div>

                    <div class="col-sm-12 col-lg-2 col-md-2 form-group-sm siafisico">
                        @Html.LabelFor(model => model.NumeroEmpenhoSiafisico, new { @class = "control-label label-form-DER siafisico" })<span class="text-danger"></span>
                        @Html.TextBoxFor(model => model.NumeroEmpenhoSiafisico, new { @class = "form-control lockSiafisico", @ReadOnly = "True" })
                    </div>
                </div>

                if (Model.TransmitidoProdesp || Model.TransmitidoSiafem || Model.TransmitidoSiafisico || Model.Id > 0)
                {
                    <div class='row'>
                        <div class='col-sm-12 col-lg-12 col-md-12 form-group-sm form-group'>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-sm-12 col-lg-2 col-md-2 form-group form-group-sm prodesp">
                            @Html.LabelFor(model => model.DataCadastramento, new { @class = "control-label label-form-DER prodesp" })<span class="text-danger"></span>
                            @Html.TextBoxFor(model => model.DataCadastramento, new { @class = "form-control lockProdesp data", @ReadOnly = "True" })
                        </div>

                        @if (Model.TransmitidoProdesp)
                        {

                            <div class="col-sm-12 col-lg-2 col-md-2 form-group form-group-sm prodesp">
                                @Html.LabelFor(model => model.DataTransmitidoProdesp, new { @class = "control-label label-form-DER prodesp" })<span class="text-danger"></span>
                                @Html.TextBoxFor(model => model.DataTransmitidoProdesp, new { @class = "form-control lockProdesp data", @ReadOnly = "True" })
                            </div>
                        }
                        @if (Model.TransmitidoSiafem)
                        {
                            <div class="col-sm-12 col-lg-2 col-md-2 form-group form-group-sm siafem">
                                @Html.LabelFor(model => model.DataTransmitidoSiafem, new { @class = "control-label label-form-DER siafem" })<span class="text-danger"></span>
                                @Html.TextBoxFor(model => model.DataTransmitidoSiafem, new { @class = "form-control lockSiafem data", @ReadOnly = "True" })
                            </div>
                        }
                        @if (Model.TransmitidoSiafisico)
                        {
                            <div class="col-sm-12 col-lg-2 col-md-2 form-group form-group-sm siafisico">
                                @Html.LabelFor(model => model.DataTransmitidoSiafisico, new { @class = "control-label label-form-DER siafisico" })<span class="text-danger"></span>
                                @Html.TextBoxFor(model => model.DataTransmitidoSiafisico, new { @class = "form-control lockSiafisico data", @ReadOnly = "True" })
                            </div>
                        }
                    </div>
                }

                @Html.Partial("~/Areas/Empenho/Views/Shared/_PesquisaCT.cshtml", ViewBag.PesquisaCT as PesquisaCTViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_PesquisaReservaContrato.cshtml", ViewBag.PesquisaReservaContrato as PesquisaReservaContratoViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_PesquisaReserva.cshtml", ViewBag.PesquisaReserva as PesquisaReservaViewModel)

                if (msgRetorno != null)
                {
                    <div class='row'>
                        <div class='col-sm-12 col-lg-12 col-md-12 form-group-sm form-group'>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-lg-5 col-md-5  form-group-sm form-group has-feedback">
                            <div id="retornoTransmissao">
                                <label class="control-label label-form-DER"><span class="text-danger"></span>Msg Retornada da Transmissão</label>
                                <div class="input-group-sm">
                                    
                                    @Html.TextArea("MsgRetorno", msgRetorno, new {@class = "form-control", @ReadOnly = "True"})
                                
                                </div>
                            </div>
                        </div>
                    </div>

                }
                @Html.Partial("~/Areas/Empenho/Views/Shared/_PesquisaReservaEstrutura.cshtml", ViewBag.PesquisaReservaEstrutura as PesquisaReservaEstruturaViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoEmpenho.cshtml", ViewBag.DadoEmpenho as DadoEmpenhoViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoObra.cshtml", ViewBag.DadoObra as DadoObraViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoEntrega.cshtml", ViewBag.DadoEntrega as DadoEntregaViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_ValorEmpenho.cshtml", ViewBag.ValorEmpenho as ValorEmpenhoViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoEmpenhoItem.cshtml", ViewBag.DadoEmpenhoItem as DadoEmpenhoItemViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoEmpenhoItemGrid.cshtml", ViewBag.DadoEmpenhoItemGrid as IList<DadoEmpenhoItemViewModel>)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoDespesa.cshtml", ViewBag.DadoDespesa as DadoDespesaViewModel)
                @Html.Partial("~/Areas/Empenho/Views/Shared/_DadoAssinatura.cshtml", ViewBag.DadoAssinatura as DadoAssinaturaViewModel)

                <div class="row">
                    <div class="col-md-12">
                        <h3 class="tituloItensPagina"></h3>
                        <hr class="margT10" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 col-lg-12 col-md-12">
                        @if (!Model.TransmitidoProdesp || (!Model.TransmitidoSiafem && !Model.TransmitidoSiafisico))
                        {
                            <button type='button' id='btnCancelar' class='btn btn-sm btn-danger'><i class='fa fa-close'></i> Cancelar</button>
                            <button type='button' id='btnSalvar' class='btn btn-sm btn-success'><i class='fa fa-save'></i> Salvar</button>
                            <button type='button' id='btnTransmitir' class='btn btn-sm btn-primary'><i class='fa fa-share'></i> Transmitir</button>
                        }
                        else
                        {
                            <button type="button" id="btnAtualizarIndex" class="btn btn-sm btn-primary" onclick="javascript: AtualizarIndex();"><i class="fa fa-arrow-left"></i> Voltar</button>
                        }
                        <button type="button" id="btnVoltar" class="btn btn-sm btn-primary" onclick="javascript: AtualizarIndex();"><i class="fa fa-arrow-left"></i> Voltar</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section script {
    <script src="~/Content/Bootstrap Validator/js/bootstrapvalidator.min.js"></script>
    <script src="~/Content/MaskMoney/jquery.maskMoney.js"></script>
    <script src="~/Content/jquery-ui-autocomplete/jquery-ui.js"></script>

    <script src="~/Content/js/Consultas.js"></script>
    <script src="~/Content/js/scriptEstruturaPrograma.js"></script>
    <script src="~/Content/js/scriptImpressao.js"></script>
    <script src="~/Content/js/scriptTransmissao.js"></script>
    <script src="~/Content/js/Empenho/Empenho.js"></script>
    <script src="~/Content/js/Empenho/EmpenhoValidacao.js"></script>
}